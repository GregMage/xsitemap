<?php
/*
 * ****************************************************************************
 * Module generated by TDMCreate from TDM "http://www.tdmxoops.net"
 * ****************************************************************************
 * xsitemap - MODULE FOR XOOPS CMS
 * Copyright (c) Urbanspaceman (http://www.takeaweb.it)
 *
 * You may not change or alter any portion of this comment or credits
 * of supporting developers from this source code or any supporting source code
 * which is considered copyrighted (c) material of the original comment or credit authors.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * ****************************************************************************
 */
/**
 * Module: xsitemap
 *
 * @package      module\xsitemap\includes
 * @author       XOOPS Module Development Team
 * @author       http://www.takeaweb.it Urbanspaceman
 * @copyright    http://www.takeaweb.it Urbanspaceman
 * @copyright    http://xoops.org 2001-2017 XOOPS Project
 * @license      http://www.fsf.org/copyleft/gpl.html GNU public license
 * @link         http://xoops.org XOOPS
 * @since        1.00
 */

defined('XOOPS_ROOT_PATH') || exit('Restricted access');

xoops_loadLanguage('admin', 'xsitemap');
if (!class_exists('XsitemapDummyObject')) {
    xoops_load('dummy', 'xsitemap');
}
 /**
  *
  * Show Site map
  *
  * @return array
  */
function xsitemap_generate_sitemap()
{
    $block = array();
    $moduleDirName = $moduleDirName = basename(dirname(__DIR__));
    /** @internal can't use Helper since function called during install
    $xsitemapHelper = \Xmf\Module\Helper::getHelper($moduleDirName);
    $pluginHandler  = $xsitemapHelper->getHandler('plugin', $moduleDirName);
    */
    xoops_load('plugin', $moduleDirName);

    // Get list of modules admin wants to hide from xsitemap
    $invisibleDirnames = empty($GLOBALS['xoopsModuleConfig']['invisible_dirnames']) ? array('xsitemap') : explode(',', $GLOBALS['xoopsModuleConfig']['invisible_dirnames'] . ',xsitemap');
    $invisibleDirnames = array_map('trim', $invisibleDirnames);
    $invisibleDirnames = array_map('mb_strtolower', $invisibleDirnames);

    // Get the mid for any of these modules if they're active and hasmain (visible frontside)
    $moduleHandler = xoops_gethandler('module');
    $invisibleMidArray = array();
    foreach ($invisibleDirnames as $hiddenDir) {
        $criteria = new CriteriaCompo(new Criteria('hasmain', 1));
        $criteria->add(new Criteria('isactive', 1));
        $criteria->add(new Criteria('name', $hiddenDir));
        $modObj = $moduleHandler->getByDirname($hiddenDir);
        if (false !== $modObj && $modObj instanceof XoopsModule) {
            $invisibleMidArray[] = $modObj->mid();
        }
    }

    // Where user has permissions
    $modulepermHandler = xoops_gethandler('groupperm');
    $groups            = ($GLOBALS['xoopsUser'] instanceof XoopsUser) ? $GLOBALS['xoopsUser']->getGroups() : XOOPS_GROUP_ANONYMOUS;
    $readAllowed       = $modulepermHandler->getItemIds('module_read', $groups);
    $filteredMids      = array_diff($readAllowed, $invisibleMidArray);
    $pluginHandler     = xoops_getModuleHandler('plugin', $moduleDirName);
    $criteria          = new CriteriaCompo(new Criteria('hasmain', 1));
    $criteria->add(new Criteria('isactive', 1));
    if (count($filteredMids) > 0) {
        $criteria->add(new Criteria('mid', '(' . implode(',', $filteredMids) . ')', 'IN'));
    }

    $modules = $moduleHandler->getObjects($criteria, true);

    $criteria = new CriteriaCompo();
    $criteria->setSort('plugin_id');
    $criteria->order = 'ASC';
    $pluginObjArray = $pluginHandler->getAll($criteria);

    foreach ($modules as $mid => $modObj) {
        $sublinks   = $modObj->subLink();
        $modDirName = $modObj->getVar('dirname', 'n');
        $block['modules'][$mid] = array('id' => $mid,
                                      'name' => $modObj->getVar('name'),
                                 'directory' => $modDirName,
                                  'sublinks' => array() // init the sublinks array
        );
        // Now 'patch' the sublink to include module path
        if (count($sublinks) > 0) {
            foreach ($sublinks as $sublink) {
                $block['modules'][$mid]['sublinks'][] = array('name' => $sublink['name'],
                                                               'url' => $GLOBALS['xoops']->url("www/modules/{$modDirName}/{$sublink['url']}"));
            }
        }

        foreach ($pluginObjArray as $pObj) {
            if ((0 == $pObj->getVar('topic_pid')) && in_array($pObj->getVar('plugin_mod_table'), (array) $modObj->getInfo('tables'))) {
                $objVars = $pObj->getValues();
                if (1 == $objVars['plugin_online']) {
                    $tmpMap = xsitemap_get_map($objVars['plugin_mod_table'], $objVars['plugin_cat_id'], $objVars['plugin_cat_pid'], $objVars['plugin_cat_name'], $objVars['plugin_call'], $objVars['plugin_weight']);
                    $block['modules'][$mid]['parent'] = isset($tmpMap['parent']) ? $tmpMap['parent'] : null;
                }
            }
        }
    }

    return $block;
}

/**
 * Get the Sitemap
 *
 * @return array sitemap links
 */
function xsitemap_get_map($table, $id_name, $pid_name, $title_name, $url, $order = '')
{
    $xDB  = XoopsDatabaseFactory::getDatabaseConnection();
    $myts = MyTextSanitizer::getInstance();

    $sql = "SELECT `{$id_name}`, `{$pid_name}`, `{$title_name}` FROM " . $xDB->prefix . "_{$table}" ;
    $result = $xDB->query($sql);
    $objsArray = array();

    while ($row = $xDB->fetchArray($result)) {
        $objsArray[] = new XsitemapDummyObject($row, $id_name, $pid_name, $title_name);
    }

    //$sql = "SELECT `{$id_name}`, `{$title_name}` FROM " . $xDB->prefix . "_{$table} WHERE `{$pid_name}`= 0";
    // v1.54 added in the event categories are flat (don't support hierarchy)
    $sql = "SELECT `{$id_name}`, `{$title_name}` FROM " . $xDB->prefix . "_{$table}";
    if ($pid_name !== $id_name) {
        $sql .= " WHERE `{$pid_name}`= 0";
    }
    if ('' != $order) {
        $sql .= " ORDER BY `{$order}`" ;
    }
    $result = $xDB->query($sql);

    $i = 0;
    $xsitemap = array();
    while (list($catid, $name) = $xDB->fetchRow($result)) {
        $xsitemap['parent'][$i] = array('id' => $catid,
                                     'title' => $myts->htmlSpecialChars($name),
                                       'url' => $url.$catid
        );

        if ($GLOBALS['xoopsModuleConfig']['show_subcategories'] && ($pid_name !== $id_name)) {
            $j = 0;
            $mytree = new XoopsObjectTree($objsArray, $id_name, $pid_name);
            $child_array = $mytree->getAllChild($catid);
            foreach ($child_array as $child) {
                $xsitemap['parent'][$i]['child'][$j] = array('id' => $child->getVar($id_name),
                                                          'title' => $child->getVar($title_name),
                                                            'url' => $url.$child->getVar($id_name)
                );
                ++$j;
            }
        }
        ++$i;
    }

    return $xsitemap;
}

/**
 * Save the XML Sitemap
 *
 * @return mixed int number of bytes saved | false on failure
 */
function xsitemap_save(array $xsitemap_show)
{
    $xml = new DOMDocument("1.0", "UTF-8");
    $xml->preserveWhiteSpace = false;
    $xml->formatOutput       = true;
    $xml_set = $xml->createElement('urlset');
    $xml_set->setAttribute('xmlns', "http://www.sitemaps.org/schemas/sitemap/0.9");

    if (!empty($xsitemap_show)) {
        foreach ($xsitemap_show['modules'] as $mod) {
            if ($mod["directory"]) {
                $xml_url = $xml->createElement("url");
                $xml_url->appendChild($xml->createComment(htmlentities(ucwords($mod['name']))));
//                $xml_url->appendChild($xml->createTextNode("<!-- ". htmlentities(ucwords($mod['name'])) . " -->"));
                $loc     = $xml->createElement('loc', htmlentities($GLOBALS['xoops']->url("www/modules/{$mod['directory']}/index.php")));
                $xml_url->appendChild($loc);
            }
            if (isset($mod['parent']) ? $mod['parent'] : null) {
                foreach ($mod["parent"] as $parent) {
                    $xml_parent = $xml->createElement("url");
                    $loc        = $xml->createElement('loc', htmlentities($GLOBALS['xoops']->url("www/modules/{$mod['directory']}/{$parent['url']}")));
                    $xml_parent->appendChild($loc);
                    $xml_url->appendChild($xml_parent);
                }
                $z = 0;
                //if ($mod["parent"][$z]["child"]) {
                if (isset($mod["parent"][$z]["child"]) ? $mod["parent"][$z]["child"] : null) {
                    foreach ($mod["parent"][$z]["child"] as $child) {
                        $xml_child = $xml->createElement("url");
                        $loc     = $xml->createElement('loc', htmlentities($GLOBALS['xoops']->url("www/modules/{$mod['directory']}/{$child['url']}")));
                        $xml_child->appendChild($loc);
                        $xml_url->appendChild($xml_child);
                    }
                    ++$z;
                }
            }
            $xml_set->appendChild($xml_url);
        }
    }
    $xml->appendChild($xml_set);
    return $xml->save($GLOBALS['xoops']->path("www/xsitemap.xml"));
}
